# [START swagger]
swagger: "2.0"
host: "energy-management.hse-api-02.cloud.goog"
basePath: /
x-google-endpoints:
- name: "energy-management.hse-api-02.cloud.goog"
  target: "34.80.99.163"
info:
  title: "HSE Energy Management"
  version: "1.0.02"
  description: |

    # Introduction
    The HSE Energy Management API is based on REST / Hypermedia and specified in [OpenAPI v2.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md). 

    The API provides energy metrics for four **Flow** types:`harvest`, `store`, `enjoy`, `grid`. 
    
    The API response consolidates all four energy flow types based on a period (week, month etc.).
    
    - Clients can use the API to manage **Energy Assets** through graphical views and by scheduling energy use at preferred times.

    - Vendor device integrations can use the API to monitor and control their **Energy Management Devices**.
    
    Energy Type | Energy Assets | Energy Management Devices
    --- | --- | ---
    `harvest` | Renewables | PV Modules, PV Grid-interactive Inverter
    `store` | Storage | Busbar Controler (BBC), Pack Management System (PMS)
    `enjoy` | Appliances | Multicore-Cable Current Sensors, Clamp-on Current Sensors
    `grid` | Mains Electricity | Smart Meters

    The API and documentation is available through the *Sundaya Developer Portal* at https://developer.sundaya.com. 

    # Overview
    
    ## Data element names

    The following provides names of all data elements used in the API, in the context of each flow. 

    - `store.in` and `store.out` indicate *charge* and *discharge* flows for batteries.

    - `grid.out` and `grid.in` indicate mains use, and feed-in flows into the public grid.

    - `harvest` indicates renewable generation and always implies `.out`. 
    
    - `enjoy` indicates energy use and always implies `.in`. 

    ## Double-entry format 

    Energy flows are based on a "double entry" format (each flow has an opposite flow). 

    These equal and opposite flows are summarised in the following table: 

    Flow | From / To   
     --- |--- 
    `harvest` |`store.in` `enjoy` `grid.in`
    `store.out` | `enjoy`
    `enjoy`  |  `harvest` `store.out` `grid.out`
     
    To query specific assets, clients can filter requests by `category`, `subcategory`, and `product-type` (in the request *Body*).


    ## Versions
    The API endpoint host is http://api.sundaya.com. 
    
    All requests to the API endpoint receive the latest version of the API.     
    
    Client applications may request a specific version through the `Accept` header.

        Accept: application/vnd.sundaya.v1+yaml

    ## Date-time Format
    Date and time parameters must be expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and must conform to [RFC3359](https://tools.ietf.org/html/rfc3339) .

        http://api.sundaya.com/energy/{energyTpe}/period/{periodType}/{endDateTime}

    e.g. http:/api.sundaya.com/energy/hse/period/week/20190210

    The compressed version of ISO 8601 is required, without semi colons and with `T` as the time designator, as shown int he examples below.
    

    ## Timezones
    Timezones are not assumed and must be explicitly specified where API parameters allow for a timestamp to be provided. 

    The Timezone can be specified in UTC or local time as shown:

    - __UTC__, expressed with a trailing `Z` 
    
        e.g. http://api.sundaya.com/energy/hse/period/minute/20190209T0930Z == 09:30 UTC

    - __Local__ time in Jakarta with offset 
    
        http://api.sundaya.com/energy/hse/period/week/YYYYMMDDThhmmss±hhmm
        e.g. http://api.sundaya.com/energy/hse/period/minute/20190209T1630-0700 == 09:30 UTC
    ## Media types
    Request `Body` parameters and all response objects are sent and received in JSON. 

    Clients should use `Accept` and `Content-Type` headers to preserve backward compatibility (in case a new media type or hypermedia scheme is introduced and designated as default).

    These media types are supported:

        application/json 
        application/vnd.collection+json
    
    ## Headers
    This following example shows a sample HTTP request and response.
    ```
    *** REQUEST ***	
    GET /energy/hse/period/week/20190210/ HTTP/1.1	
    Host: api.sundaya.com	
    Accept: application/vnd.collection+json	
        
    *** RESPONSE ***	
    200 OK HTTP/1.1	
    Content-Type: application/vnd.collection+json	
    Content-Length: xxx	
        
    { "collection" : {...}, ... }
    ```

    ## Link-relation types
    Link-relations in Response objects are based on [RFC8288](https://tools.ietf.org/html/rfc8288#page-6). 

    The following registered types are referenced in the `rel` attribute of the links in an `application/vnd.collection+json` response. 
    - **self**	- Identifies the link"s context.

        In `collection.links` it identifies the collection (name = *week*)            

        - e.g. href=<a>http:/api.sundaya.com/energy/hse/period/week/20190210</a>

        In `collection.items.links` it identifies an item in the collection (name = *day*).
        - e.g. href=<a>http:/api.sundaya.com/energy/hse/period/day/20190204</a>

    - **collection** - in `collection.links` it targets the item series whiich make up the collection (name = *week.days*).
        
        - e.g. href=<a>http:/api.sundaya.com/energy/hse/interval/day/20190204/20190210</a>

    - **item** - in `collection.items.links` it targets subitems of the item in that context (name = *day.hours*).
    
        - e.g. href=<a>http:/api.sundaya.com/energy/hse/interval/hour/201902050600/201902050500</a>

    - **up** - Identifies the parent the collection or item represented by the link"s context (name = *week.month*).
        
    - **next** - Identifies the next sibling of the collection or item series represented by the link"s context (name = *week.next*).

    - **prev** - Identifies the previous siblings of the collection or item series represented by the link"s context (name = *week.previous*).
        
  license:
    name: "Creative Commons Attribution 4.0 International"
    url: "http://creativecommons.org/licenses/by/4.0/"
  termsOfService: "https://sundaya.com/terms-of-service/"
# [END swagger]
consumes:
- "application/json"
- "application/vnd.collection+json"
produces:
- "application/vnd.collection+json"
schemes:
- "http"
parameters:
  energyType:
    description: "The type of energy flow."
    name: energyType
    in: path
    required: true
    enum:
      - hse
      - harvest
      - store
      - enjoy
      - grid
    type: string
  periodType:
    description: "The duration of an energy monitoring window."
    name: periodType
    in: path
    required: true
    enum:
      - instant
      - second
      - hour
      - timeofday
      - day
      - week
      - month
      - quarter
      - year
      - 5year
    type: string
  endDateTime:
    description: "The ending date (and time) of the period or interval, expressed in compressed ISO 8601/RFC3339 (YYYYMMDDThhmmss±hhmm)."
    name: endDateTime
    in: path
    required: true
    type: string
    format: date-time
    example: "20190209T150012-0330"
  startDateTime:
    description: "The starting date (and time) of the interval, expressed in compressed ISO 8601/RFC3339 (YYYYMMDDThhmmss±hhmm)."
    name: startDateTime
    in: path
    required: true
    type: string
    format: date-time
    example: "20190209T150012-0330"
  deviceId:
    description: The device identifier
    name: deviceId
    in: path
    required: true
    type: string
    example: BBC-PR1202-999
  datasetType:
    description: "The type of dataset."
    name: datasetType
    in: path
    required: true
    enum:
      - SNMP
      - EPACK
    type: string
  siteId:
    description: The site identifier of the installation  
    name: siteId
    in: query
    required: true
    type: string
tags:
  - description: |
      Devices monitor device health and energy flows and provide metrics for applicaitons.

        For example, vendor integrations use the data to control and manage the device. 
        Client applications use the data to analyse energy Flows across :harvest, store, enjoy, grid.
    name: Device Monitoring Data
paths:
  "/energy/{energyType}/period/{periodType}/{endDateTime}":
    get:
      responses:
        "200":
          description: Monitoring data retrieved successfully
          schema:
            $ref: "#/definitions/energyData"
        "401":
          description: The client does not have sufficient permission
          schema:
            $ref: "#/definitions/accessDenied"
        "404":
          description: The specified resource was not found
          schema:
            $ref: "#/definitions/notFound"
      summary: Retrieves HSE monitoring data for the specified period
      tags:
        - HSE Energy Management
    parameters:
      - $ref: "#/parameters/energyType"
      - $ref: "#/parameters/periodType"
      - $ref: "#/parameters/endDateTime"
      - $ref: "#/parameters/siteId"
  "/devices/{deviceId}/datasets/{datasetType}":    
    post:
      description: |
        Logs monitoring data for a device.
      parameters:
        - description: Energy Management Device monitoring data
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/deviceData"
      responses:
        "201":
          description: "Monitoring data was logged successfully"
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
        "400":
          description: The client specified an invalid argument
          schema:
            $ref: "#/definitions/invalidRequest"
        "401":
          description: The client does not have sufficient permission
          schema:
            $ref: "#/definitions/accessDenied"
      tags:
        - Device Monitoring Data
    parameters:
      - $ref: "#/parameters/deviceId"
  "/echo":
    post:
      description: "Echo back a given message."
      operationId: "echo"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Echo"
          schema:
            $ref: "#/definitions/echoMessage"
      parameters:
      - description: "Test, echo back request body"
        in: body
        name: message
        required: true
        schema:
          $ref: "#/definitions/echoMessage"
definitions:
  generalError:
    properties:
      code:
        description: The error code.
        example: NullValue
        type: string
      message:
        description: The error message.
        example: Illegal input for operation
        type: string
      target:
        description: The error target.
        example: Period
        type: string
    type: object
  invalidRequest:
    type: object
    properties:
      code:
        description: The error code.
        example: "400"
        type: string
      details:
        items:
          $ref: "#/definitions/generalError"
        type: array
      message:
        description: The error message.
        example: The client specified an invalid argument
        type: string
      status:
        description: The error status.
        example: INVALID_ARGUMENT
        type: string
  accessDenied:
    properties:
      code:
        description: The error code.
        example: "403"
        type: string
      details:
        items:
          $ref: "#/definitions/generalError"
        type: array
      message:
        description: The error message.
        example: The client does not have sufficient permission
        type: string
      status:
        description: The error status.
        example: PERMISSION_DENIED
        type: string
    type: object
  notFound:
    properties:
      code:
        description: The error code.
        example: "404"
        type: string
      details:
        items:
          $ref: "#/definitions/generalError"
        type: array
      message:
        description: The error message.
        example: The specified resource was not found
        type: string
      status:
        description: The error status.
        example: NOT_FOUND
        type: string
    type: object
  energyData:
    description: A collection of data items for a monitoring period
    properties:
      collection:
        type: object
        title: The Collection Schema
        required:
        - version
        - href
        - links
        - items
        properties:
          version:
            type: string
            title: The Version Schema
            examples:
            - "0.2"
            pattern: ^(.*)$
          href:
            type: string
            title: The Href Schema
            examples:
            - http:/api.sundaya.com/hse/week/20190210
          links:
            type: array
            title: The Links Schema
            items:
              type: object
              title: The Items Schema
              required:
              - rel
              - name
              - prompt
              - title
              - href
              properties:
                rel:
                  type: string
                  title: The Rel Schema
                  examples:
                  - collection
                name:
                  type: string
                  title: The Name Schema
                  examples:
                  - week.month
                prompt:
                  type: string
                  title: The Prompt Schema
                  examples:
                  - Month
                title:
                  type: string
                  title: The Title Schema
                  examples:
                  - February
                href:
                  type: string
                  title: The Href Schema
                  examples:
                  - http:/api.sundaya.com/energy/hse/period/month/201902
          items:
            type: array
            title: The Items Schema
            items:
              type: object
              title: The Items Schema
              required:
              - href
              - data
              properties:
                href:
                  type: string
                  title: The Href Schema
                  examples:
                  - http:/api.sundaya.com/hse/day/20190204
                links:
                  type: array
                  title: The Links Schema
                  items:
                    type: object
                    title: The Items Schema
                    required:
                    - rel
                    - name
                    - prompt
                    - title
                    - href
                    properties:
                      rel:
                        type: string
                        title: The Rel Schema
                        default: ""
                        examples:
                        - item
                      name:
                        type: string
                        title: The Name Schema
                        default: ""
                        examples:
                        - day
                      prompt:
                        type: string
                        title: The Prompt Schema
                        examples:
                        - Day
                      title:
                        type: string
                        title: The Title Schema
                        examples:
                        - Monday
                      href:
                        type: string
                        title: The Href Schema
                        examples:
                        - http:/api.sundaya.com/hse/day/20190204
                      render:
                        type: string
                        title: The Render Schema
                        default: ""
                        examples:
                        - link
                data:
                  type: array
                  title: The Data Schema
                  items:
                    type: object
                    title: The Items Schema
                    required:
                    - name
                    - value
                    properties:
                      name:
                        type: string
                        title: The Name Schema
                        examples:
                        - harvest.day
                      value:
                        type: string
                        title: The Value Schema
                        examples:
                        - "15396"
    type: object
  deviceData:
    description: A dataset for a device
    properties:
      template:
        type: object
        title: The Template Schema
        required:
        - data
        properties:
          data:
            type: array
            title: The Data Schema
            items:
              type: object
              title: The Items Schema
              required:
              - name
              - value
              properties:
                name:
                  type: string
                  title: The Name Schema
                  default: ''
                  examples:
                  - timestamp
                value:
                  type: string
                  title: The Value Schema
                  default: ''
                  examples:
                  - 20190209T150100.912-0700
    type: object
  echoMessage:
    type: "object"
    properties:
      message:
        type: "string"
# This section requires all requests to any path to require an API key.
security:
- api_key: []
securityDefinitions:
  # This section configures basic authentication with an API key.
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"