# [START swagger]
swagger: "2.0"
host: "api.endpoints.sundaya.cloud.goog"
x-google-endpoints:
- name: "api.endpoints.sundaya.cloud.goog"
  target: "34.80.69.65"
basePath: /
info:
  title: "Energy Management"
  version: "0.0.06"
  description: |
    Our Energy Management is based on four **Energy Types**:
    `harvest`, `store`, `enjoy`, `grid`
    
    The API provides two routes for measuring and managing energy.
    
    The `/energy` path provides consolidated data for a period (week, month etc.) and allows clients to manage **Energy Assets** through graphical views and by scheduling energy use at preferred times. 
    
    Vendor device integrations can use the `/devices` path to monitor and control their **Energy Management Devices**.
    
    Type | Assets | Devices
    --- | --- | ---
    `harvest` | Renewables | PV Modules, Maximum Power Point Trackers (MPPT)
    `store` | Storage | Busbar Controlers (BBC), Pack Management Systems (PMS)
    `enjoy` | Appliances | Multicore-Cable Current Sensors, Switchboard Clamp Sensors
    `grid` | Mains Electricity | Smart Meters, PV Grid-interactive Inverters
  license:
    name: "Creative Commons Attribution 4.0 International"
    url: "http://creativecommons.org/licenses/by/4.0/"
  termsOfService: "https://sundaya.com/terms-of-service/"
# [END swagger]
consumes:
- "application/json"
produces:
- "application/json"
schemes:
# Uncomment after configuring SSL.
#- "https"
- "http"
paths:
  "/versions":
    get:
      description: "Returns a list of versions which are still supported. Older versions can be requested through the `Accept` request header (see _Versions_ in [`Standards & Conventions`](https://endpointsportal.sundaya.cloud.goog/docs/api.endpoints.sundaya.cloud.goog/0/c/Getting%20Started/Standards%20&%20Conventions))."
      operationId: "diagnostics.versions.get"
      produces:
      - "application/json"
      responses:
        200:
          $ref: "#/responses/diagnosticsResponse"
      tags:
        - Diagnostics
  "/energy/{type}/{period}/{epoch}":
    get:
      description: "Retrieves HSE monitoring data for the specified period."
      operationId: "energy.type.get"
      produces:
      - "application/json"
      parameters:
      - name: type
        in: path
        description: "The type of energy flow."
        type: string
        default: hse
        enum:
          - hse
          - harvest
          - store
          - enjoy
          - grid
      - name: period
        in: path
        description: "The unit of time for which total energy is aggregated. The only exception is 'instant' which refers to energy measured at a single point in time, without aggregation."
        type: string
        default: week
        enum:
          - instant
          - second
          - hour
          - timeofday
          - day
          - week
          - month
          - quarter
          - year
          - 5year
      - name: epoch
        in: path
        description: "The start date (and time) of the period, in compressed `ISO 8601/RFC3339` (YYYYMMDDThhmmssÂ±hhmm)."
        type: string
        format: date-time
      - name: site
        in: query
        required: true
        description: "Identifier of the customer site where energy assets have been installed."
        type: string
      responses:
        200:
          description: "Energy data retrieved."
          schema:
            $ref: "#/definitions/genericMessage"
        401:
          description: The client does not have sufficient permission
          schema:
            $ref: "#/definitions/accessDenied"
        404:
          description: The specified resource was not found
          schema:
            $ref: "#/definitions/notFound"
      tags:
        - Energy 
  "/devices/{id}/datasets/{type}":
    post:
      description: "Logs monitoring data for a device."
      operationId: "devices.datasets.post"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        description: "The device identifier."
        type: string
      - name: type
        in: path
        description: "The type of dataset."
        enum:
          - MPPT-SNMP
          - PMS-EPACK
        type: string
      - name: device-data
        in: body
        required: true
        description: "Data to be logged."
        schema:
          $ref: "#/definitions/deviceData"
      responses:
        201:
          description: "Dataset logged."
          headers:
            Location:
              description: |
                A [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30) header pointing to the location of the new resource.
              type: string
          schema:
            $ref: "#/definitions/genericMessage"
        400:
          description: The client specified an invalid argument
          schema:
            $ref: "#/definitions/invalidRequest"
        401:
          description: The client does not have sufficient permission
          schema:
            $ref: "#/definitions/accessDenied"
      tags:
        - Devices 
responses:
  diagnosticsResponse:
    description: "Diagnostics retrieved."
    schema:
      $ref: "#/definitions/genericMessage"
definitions:
  collectionData:
    description: Generic data array for Collection+JSON documents.
    type: array
    items:
      type: object
      required:
      - name
      - value
      properties:
        name:
          type: string
        value:
          type: string
  collectionLinks:
    description: Generic array of links for Collection+JSON documents.
    type: array
    items:
      type: object
      required:
      - rel
      - name
      - prompt
      - title
      - href
      - render
      properties:
        rel:
          type: string
        name:
          type: string
        prompt:
          type: string
        title:
          type: string
        href:
          type: string
        render:
          type: string
  deviceData:
    description: Device data items collection.
    type: object
    properties:
      href:
        type: string
      items:
        type: array
        items:
          type: object
          required:
          - data
          properties:
            data:
              $ref: "#/definitions/collectionData"
  energyData:
    description: Energy data items collection.
    type: object
    properties:
      collection:
        type: object
        required:
        - version
        - href
        - links
        - items        
        properties:
          version:
            type: string
          href:
            type: string
          links:
            $ref: "#/definitions/collectionLinks"
          items:
            type: array
            items:
              type: object
              required:
              - href
              - links
              - data
              properties:
                href:
                  type: string
                links:
                  $ref: "#/definitions/collectionLinks"
                data:
                  $ref: "#/definitions/collectionData"    
  genericMessage:
    type: "object"
    properties:
      message:
        type: "string"
  generalError:
    type: object
    properties:
      code:
        description: The error code.
        example: NullValue
        type: string
      message:
        description: The error message.
        example: Illegal input for operation
        type: string
      target:
        description: The error target.
        example: Period
        type: string
  invalidRequest:
    type: object
    properties:
      code:
        description: The error code.
        example: "400"
        type: string
      details:
        items:
          $ref: "#/definitions/generalError"
        type: array
      message:
        description: The error message.
        example: The client specified an invalid argument
        type: string
      status:
        description: The error status.
        example: INVALID_ARGUMENT
        type: string
  accessDenied:
    type: object
    properties:
      code:
        description: The error code.
        example: "403"
        type: string
      details:
        items:
          $ref: "#/definitions/generalError"
        type: array
      message:
        description: The error message.
        example: The client does not have sufficient permission
        type: string
      status:
        description: The error status.
        example: PERMISSION_DENIED
        type: string
  notFound:
    type: object
    properties:
      code:
        description: The error code.
        example: "404"
        type: string
      details:
        items:
          $ref: "#/definitions/generalError"
        type: array
      message:
        description: The error message.
        example: The specified resource was not found
        type: string
      status:
        description: The error status.
        example: NOT_FOUND
        type: string
# This section requires all requests to any path to require an API key.
security:
- api_key: []
securityDefinitions:
  # This section configures basic authentication with an API key.
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  # This section configures authentication using Google API Service Accounts
  # to sign a json web token. This is mostly used for server-to-server
  # communication.
  google_jwt:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    # This must match the 'iss' field in the JWT.
    x-google-issuer: "jwt-client.endpoints.sample.google.com"
    # Update this with your service account's email address.
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/jwk/YOUR-SERVICE-ACCOUNT-EMAIL"
    # This must match the "aud" field in the JWT. You can add multiple
    # audiences to accept JWTs from multiple clients.
    x-google-audiences: "echo.endpoints.sample.google.com"
  # This section configures authentication using Google OAuth2 ID Tokens.
  # ID Tokens can be obtained using OAuth2 clients, and can be used to access
  # your API on behalf of a particular user.
  google_id_token:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://accounts.google.com"
    x-google-jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
    # Your OAuth2 client's Client ID must be added here. You can add
    # multiple client IDs to accept tokens from multiple clients.
    x-google-audiences: "YOUR-CLIENT-ID"

