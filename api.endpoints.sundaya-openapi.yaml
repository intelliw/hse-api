# [START swagger]
swagger: "2.0"
host: "api.endpoints.sundaya.cloud.goog"
x-google-endpoints:
- name: "api.endpoints.sundaya.cloud.goog"
  target: "34.80.69.65"
basePath: /
info:
  title: "Energy Management"
  version: "0.0.06"
  description: |
    Our Energy Management is based on four **Energy Types**:
    `harvest`, `store`, `enjoy`, `grid`
    
    The API provides two routes for measuring and managing energy.
    
    The `/energy` path provides consolidated data for a period (week, month etc.) and allows clients to manage **Energy Assets** through graphical views and by scheduling energy use at preferred times. 
    
    Vendor device integrations can use the `/devices` path to monitor and control their **Energy Management Devices**.
    
    Type | Assets | Devices
    --- | --- | ---
    `harvest` | Renewables | PV Module Strings, Maximum Power Point Tracker (MPPT)
    `store` | Storage | Busbar Controler (BBC), Pack Management System (PMS)
    `enjoy` | Appliances | Multicore-Cable Current Sensors, Switchboard Clamp Sensors
    `grid` | Mains Electricity | Smart Meters, PV Grid-interactive Inverter
  license:
    name: "Creative Commons Attribution 4.0 International"
    url: "http://creativecommons.org/licenses/by/4.0/"
  termsOfService: "https://sundaya.com/terms-of-service/"
# [END swagger]
consumes:
- "application/json"
produces:
- "application/json"
schemes:
# Uncomment after configuring SSL for this API.
#- "https"
- "http"
paths:
  "/v":
    get:
      description: "Returns a list of versions which are still supported. Older versions can be requested through the `Accept` request header (see _Versions_ in [`Standards & Conventions`](https://endpointsportal.sundaya.cloud.goog/docs/api.endpoints.sundaya.cloud.goog/0/c/Getting%20Started/Standards%20&%20Conventions))."
      operationId: "versions.v.get"
      produces:
      - "application/json"
      responses:
        200:
          description: "Versions retrieved."
          schema:
            $ref: "#/definitions/genericMessage"
      tags:
        - Versions 
  "/energy/{type}/{period}/{epoch}":
    get:
      description: "Retrieves HSE monitoring data for the specified period."
      operationId: "energymanagement.energy.get"
      produces:
      - "application/json"
      responses:
        200:
          description: "Energy data retrieved."
          schema:
            $ref: "#/definitions/genericMessage"
      parameters:
      - name: type
        in: path
        description: "The type of energy flow."
        type: string
        default: hse
        enum:
          - hse
          - harvest
          - store
          - enjoy
          - grid
      - name: period
        in: path
        description: "The unit of time for which total energy is aggregated. The only exception is 'instant' which refers to energy measured at a single point in time, without any aggregation or total."
        type: string
        default: week
        enum:
          - instant
          - second
          - hour
          - timeofday
          - day
          - week
          - month
          - quarter
          - year
          - 5year
      - name: epoch
        in: path
        description: "The start date (and time) of the period, in compressed `ISO 8601/RFC3339` (YYYYMMDDThhmmssÂ±hhmm)."
        type: string
        format: date-time
      - name: siteId
        in: query
        required: true
        description: "Identifier of the site where energy assets are installed."
        type: string
      tags:
        - Energy Management 
definitions:
  genericMessage:
    type: "object"
    properties:
      message:
        type: "string"
# This section requires all requests to any path to require an API key.
security:
- api_key: []
securityDefinitions:
  # This section configures basic authentication with an API key.
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  # This section configures authentication using Google API Service Accounts
  # to sign a json web token. This is mostly used for server-to-server
  # communication.
  google_jwt:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    # This must match the 'iss' field in the JWT.
    x-google-issuer: "jwt-client.endpoints.sample.google.com"
    # Update this with your service account's email address.
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/jwk/YOUR-SERVICE-ACCOUNT-EMAIL"
    # This must match the "aud" field in the JWT. You can add multiple
    # audiences to accept JWTs from multiple clients.
    x-google-audiences: "echo.endpoints.sample.google.com"
  # This section configures authentication using Google OAuth2 ID Tokens.
  # ID Tokens can be obtained using OAuth2 clients, and can be used to access
  # your API on behalf of a particular user.
  google_id_token:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://accounts.google.com"
    x-google-jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
    # Your OAuth2 client's Client ID must be added here. You can add
    # multiple client IDs to accept tokens from multiple clients.
    x-google-audiences: "YOUR-CLIENT-ID"

